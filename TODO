Features:
  * Clicking *save* when working on multiple avs... should it save them all, or only the current one?
  * Warn about closing with unsaved files still open

Bugs:
  * when editing multiple animations, switching between them with a part selected causes both avs to be set to the data for one of them
  * clicking "cancel" in File load dialog, then clicking the view area, causes a segfault

Untested:
  * Saving / data integrity when working with multiple avs

== Animik ===============================================================================================================================
Features:
  * Rotate/pan of scene shouldn't unselect limb/prop. Only simple click on background.

Bugs:
  * After opening .avm file, the floor is not highlighted red if first frame is protected. After moving on another frame and back it already is
  * Tab/window title not flagged with asterisk when change done in TimeLineView by dragging.
  * Spotted on Win32. Open AVM, selecte a part, alter rotation. Tab is marked with '*', but after selecting another part, it
    disappears (like being saved).
  * Player loop-ing is independent from underlying Animation. The looping set on the Player should actually set it to the animation.
  * Open new AVBL, place an animation on the time-line. Clicking on a frame inside works (figure poses). Move the animation to another
    trail. Clicking on its frame doesn't change the posture anymore.
    UPDATE: THIS SHOULD JUST START WORK WHEN I MERGE ANIMATION ON A TRAIL CORRECTLY.
  * Somehow it's possible to have the same file in the Animation list multiple times. Needs investigation first.


Bug-o-feature:
  * In the SaveChangesDialog it's possible to change the filename by double-clicking. Find if it's possible to save the file under
    different filename.

Next task:
  * Weighted animation.
    + int FrameData::weight is totally unreal (because of non-key frames). Instead a solution similar to key-frames should be used. Something
      like 'key-weights' that belong to BVHNode (int[] BVHNode::frameWeights). It would be used in a way similar to key-frames, in method
      frameData(int). Means it actually is delivered with FrameData object, but the values are storead in the array of BVHNode.
    + int[] Animation::frameWeights appears rationale (just it will be int* WeightedAnimation::frameWeights).
  * The AnimationView in BlenderTab won't select limbs. Clicking on a figure should have no efect.
  * Show also GLOBAL rotation for each limb. Draw global (still) coordinate system around currently selected limb. And check Kundrat's work.
    (POSTPONED!)
